@import "base";
@import "humon_node_base";

.humon-editor {
  padding: $nodeEditorPadding;
  border: $nodeEditorBorder;
}
.humon-editor.humon-editor-inline {
  padding: 3px 3px;
  border: none;
}


body {
  font-family: "SourceSansPro";
}

.node {
  font-family: "SourceSansPro";
  font-size: $nodeCopyFontSize;
  cursor: text;
  color: $copygray;
  position: relative;
  padding-left: $nodeWhiteIndent;
  border: 0px transparent solid;
  border-left: $nodeBorderLeft;
  transition: all 300ms ease;
}

.node.node-literal { }
.node.node-literal:hover { }
.node.node-collection {
  // see documentation on humonNodeView.suppressGap
  padding-bottom: 5px;
}
.node.node-collection:hover { }
/*
 * Active node styling
 */
.node.active {
}
.node.active:before {
  transition: all 300ms ease;
  content: "\00BB"; //»
  position: absolute;
  left: 0;
  font-size: 22px;
  font-weight: 600;
  vertical-align: middle;
}
.node:before {
  font-weight: 100;
  transition: all 300ms ease;
}

.node.active > .node {
  border-left: $nodeActiveBorderLeft;
  transition: all 300ms ease;
}
.node.active > .content-field {
  border-bottom: $borderUnderline;
  color: $nodeActiveCopyColor;
}

.node.active > .content-field.idx-field {
  transition-property: color;
  color: $nodeIdxActiveCopyColor;
  border-bottom: $borderTransparent;
}
.content-field:empty:before {
  content: "\2026"; // ellipsis
  content: "\0020"; // interpunct
}
.node.active > .content-field:empty:before {
  display: none;
}
.node.active > span.node-detail,
.node:hover > span.node-detail {
  visibility: visible;
}
span.node-detail {
  font-style: italic;
  visibility: hidden;
  position: relative;
  display: inline-block;
}
span.node-detail.node-icon {
  height: 10px;
  width: 10px;
  font-size: 10px;
  line-height: 10px;
  i.icon {
    height: 10px;
    top: 0%;
    position: absolute;
    left: 0px ;// -12px;
  }
}
/*
 * Active child styling
 */
// child node glyph
.node.activeChild {
  &:before {
    content: "\21B5"; // carraige return
    content: "\2022"; // bullet •
    color: $childNodeGlyphColor;

    display: inline-block;
    position: absolute;
    left: $childNodeGlyphLeftOffset;

    width: $childNodeGlyphWidth;
    // @include rotate(90deg);

  }
}



/*
 * Content Fields
 */
.node {
  .content-field {
    border-bottom: $borderLightUnderline;
    border-left: $borderTransparent;
    color: $nodeCopyColor;
    transition: all 300ms ease;
  }
  div.content-field, span.content-field {
    height: $lineheight;
  }
  textarea.content-field {
    color: $copygray;
    height: $lineheight;
    border: none;
    padding: 0px;
    margin: 0px;
    border-radius: 0px;
    box-shadow: none;
    resize: none;
    background: none;
    overflow: hidden;
    vertical-align: top;
  }
  textarea.content-field:focus {
    border: none;
    border-left: 1px solid transparent;
    border-right: 1px solid transparent;
    box-shadow: none;
  }

  textarea.content-field {
    border-left: 1px solid transparent;
    border-right: 1px solid transparent;
  }

  /*
   * VAL FIELD
   */

  textarea.content-field.val-field {
    min-width: 100px;
  }
  textarea.content-field.val-field:focus {
  }
  div.val-field {
    display: inline-block;
    min-width: $valFieldMinWidth;
    max-width: $valFieldMaxWidth;
  }

  span.val-field {
    display: inline-block;
    min-width: $valFieldMinWidth;
    max-width: $valFieldMaxWidth;
  }
  span.val-field:focus {
  }

  /*
   * Label Field
   */
  textarea.content-field.label-field {
    // padding-left: $fieldWhiteIndent;
  }
  /*
   * index field
  */
  textarea.content-field.idx-field {
    font-size: $nodeCopyFontSize;
    display: inline-block;
    color: $nodeIdxCopyColor;
    min-width: $idxFieldMinWidth;
    max-width: $idxFieldMaxWidth;
  }
  /*
   * Key Field
   */
  textarea.content-field.key-field {
    min-width: 25px;
    width: 100px;
    text-align: left;
    padding-right: $fieldWhiteIndent;
  }
  div.content-field.key-field {
    min-width: $keyFieldMinWidth;
    max-width: $keyFieldMaxWidth;
    height: $lineheight;
  }
  span.content-field.key-field {
    display: inline-block;
    min-width: $keyFieldMinWidth;
    max-width: $keyFieldMaxWidth;
    height: $lineheight;

    text-overflow: ellipsis; // "…"; //\2026";
    overflow: hidden;
    white-space: nowrap;
    vertical-align: bottom;
  }
  .content-field.key-field:focus {
    overflow: visible;
    max-width: 1000px;
    transition: all 300ms ease;
  }
  /*
   * Key Fixed Field
   */
  span.content-field.key-field.key-field-fixed {
    color: $rootNodeKeyColor;
    border-bottom: $borderTransparent;
    font-weight: 600;
  }
  .node.active > span.content-field.key-field.key-field-fixed {
    color: $rootNodeKeyColor;
    border-bottom: $borderTransparent;
  }
}


// see hnv.suppressGap
.node.node-collection.suppress-gap {
  padding-bottom: 0px;// transparent solid;
  margin-bottom: 0px;// transparent solid;
  margin-top: 0px;// transparent solid;
}

